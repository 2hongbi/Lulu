name: Deploy to Amazon ECR and ECS

on:
  push:
    paths:
      - 'src/airflow/**'
    branches:
      - main
      - test-cd
env:
  AWS_REGION: ap-northeast-3
  ECR_REPOSITORY: de-4-2-ecr/airflow
  ECS_CLUSTER: ecs-de-4-2

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f src/airflow/Dockerfile src/airflow/
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Download task definition for airflow-scheduler
        run: |
          aws ecs describe-task-definition --task-definition lulu-airflow-scheduler --query taskDefinition > task-definition-scheduler.json

      - name: Modify and Register new task definition for airflow-scheduler
        run: |
          jq '.containerDefinitions[0].image = env.ECR_REGISTRY + "/" + env.ECR_REPOSITORY + ":" + env.IMAGE_TAG | del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)' task-definition-scheduler.json > modified-task-definition.json
          aws ecs register-task-definition --cli-input-json file://modified-task-definition.json

      - name: Update service for airflow-scheduler
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service lulu-airflow-scheduler --task-definition ${{ steps.register-task-definition-scheduler.outputs.taskDefinition.taskDefinitionArn }}

      - name: Download task definition for airflow-worker
        run: |
          aws ecs describe-task-definition --task-definition lulu-airflow-worker --query taskDefinition > task-definition-worker.json

      - name: Modify and Register new task definition for airflow-worker
        run: |
          jq '.containerDefinitions[0].image = env.ECR_REGISTRY + "/" + env.ECR_REPOSITORY + ":" + env.IMAGE_TAG | del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)' task-definition-worker.json > modified-task-definition-worker.json
          aws ecs register-task-definition --cli-input-json file://modified-task-definition-worker.json

      - name: Update service for airflow-worker
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service lulu-airflow-worker --task-definition ${{ steps.register-task-definition-worker.outputs.taskDefinition.taskDefinitionArn }}

      - name: Download task definition for airflow-web-server
        run: |
          aws ecs describe-task-definition --task-definition lulu-airflow-web-server --query taskDefinition > task-definition-web-server.json

      - name: Modify and Register new task definition for airflow-web-server
        run: |
          jq '.containerDefinitions[0].image = env.ECR_REGISTRY + "/" + env.ECR_REPOSITORY + ":" + env.IMAGE_TAG | del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)' task-definition-web-server.json > modified-task-definition-web-server.json
          aws ecs register-task-definition --cli-input-json file://modified-task-definition-web-server.json

      - name: Update service for airflow-web-server
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service lulu-airflow-web-server --task-definition ${{ steps.register-task-definition-web-server.outputs.taskDefinition.taskDefinitionArn }}